# -*- coding: utf-8 -*-
"""neural-coref.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15gSGUT6Ou4zrXbhnNWo5mIvwNXgObt0L
"""
import os
# os.system("mkdir temp")
# os.system("cd temp")
# os.system("cd neuralcoref")

import neuralcoref
import spacy

nlp = spacy.load('en')
neuralcoref.add_to_pipe(nlp)

with open('texts/regexed.txt') as f:
    textBeforeCoreferenceResolution = f.readlines()


doc = nlp(textBeforeCoreferenceResolution[0])
print(doc._.coref_clusters)


textAfterCoreferenceResolution = ""
if doc._.has_coref:
	highlighted_original_text = ""
	for token in doc:
		if token._.in_coref:
					title_text = ""
					for i in range(len(token._.coref_clusters)):
						if i == 0:
							title_text += token._.coref_clusters[i].main.text
						else:
							title_text += ", " + token._.coref_clusters[i].main.text
					highlighted_original_text += "<span title='" + title_text + "' style='background: yellow; padding: 4px;'>" + token.text + "</span>" + token.whitespace_
		else:
				highlighted_original_text += token.text + token.whitespace_
	     
else:
	  print(doc.text)
	
# print("Resolved Text:")
textAfterCoreferenceResolution = doc._.coref_resolved
# print(doc._.coref_resolved)

with open('texts/tempneuralcoreferenced.txt', 'w') as f:
    f.write(textAfterCoreferenceResolution)